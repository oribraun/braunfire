app.controller('PanelCtrl',['$scope','$http','$rootScope','$timeout',function($scope,$http,$rootScope,$timeout){    $scope.searchText = '';    $scope.current_project = '';    $scope.current_project_serial = '';    $scope.entities = '';    //$scope.level_options = level_options;    $scope.project_options = project_options;    $scope.project_serial_options = project_serial_options;    $scope.water_specs_options = water_specs_options;    $scope.committee_approve_options = committee_approve_options;    $scope.project_status_options = project_status_options;    $scope.status_description_options = status_description_options;    $scope.architect_options = architect_options;    $scope.project_manager_options = project_manager_options;    $scope.account_manager_options = account_manager_options;    $scope.foreman_manager_options = foreman_manager_options;    $scope.company_options = company_options;    $scope.manager_type_options = manager_type_options;    $scope.building_type_options = building_type_options;    $scope.building_status_options = building_status_options;    $scope.print_shop_link_options = print_shop_link_options;    $scope.performa_text_options = performa_text_options;    $scope.user_options = user_options;    $scope.consultant_options = consultant_options;    $scope.consultant_type_options = consultant_type_options;    $scope.account_managers = [];    $scope.addProject = false;    $scope.selected = '';    $scope.entity = '';    $scope.openTab = 'project';    $scope.currentBuilding = '';    $scope.currentPaymentLevel = 0;    $scope.currentPerforma = '';    $scope.tabs = {        project: {            'project_serial': 0,            'name': '',            'address': '',            'project_status_id': 0,            'payment_status': '',            'notes': '',            'water_specs': '',            'water_shield': 0,            'water_specs_text': '',            'committee_approve': '',            'committee_approve_text': ''        },        architect: {            address: "",            email: "",            fax: 0,            first_name: "",            id: 0,            last_name: "",            manager_email: "",            manager_mobile: "",            manager_name: "",            mobile: 0,            phone: 0,            post_box: 0,            post_code: 0        },        company: {            account_manager_id: 0,            account_manager_name: "",            address: "",            email: "",            fax: 0,            first_name: "",            id: 0,            last_name: "",            mobile: 0,            phone: 0,            post_box: 0,            post_code: 0,            project_manager_id: 0,            project_manager_name: "",            social_id: "1"        },        project_manager: {            id: 0,            first_name: "",            last_name: "",            address: "",            email: "",            phone: 0,            mobile: 0,            post_code: 0,            manager_type_id: 0        },        buildings: [            {                project_id: 0,                building_name: "",                building_address: "",                building_block: "",                building_ground: "",                building_lot: "",                building_num: 0,                muni_num: 0,                fire_num: 0,                committee_approve_num: 0,                architect_id: 0,                committee_approve: 0,                building_status_id: 0,                building_type_id: 0            }        ],        payment_levels: [        ],        project_notes:[            {                project_id:0,                text:''            }        ],        project_criticism:[            {                project_id:0,                text:''            }        ],        consultants: [],        foreman: [],        project_performas: [],    };    $scope.newProject = function(){        $scope.addProject = true;    }    $scope.setOpenTab = function(tab){        $scope.openTab = tab;        if(tab == 'buildings') {            //$scope.loadProjectBuildings();        }        if(tab == 'performas') {            //$scope.loadProjectPerformas();        }        if(tab == 'payment_level') {            //$scope.loadProjectPaymentLevels();        }        //$scope.loadTab(tab);    }    $scope.$watch('current_project',function(){        //$scope.openTab = '';        $scope.openTab = 'project';        $scope.tabs = {            project:{},            architect:{},            company:{},            project_manager:{},            buildings: [],            project_notes: [],            project_criticism: [],            consultants: [],            foreman: [],        }        $scope.tabs.project.project_serial = 0;        if(!$scope.current_project.value) {            $scope.tabs.project.name = $scope.current_project;        }    })    $scope.$watch('current_project_serial',function(){        //$scope.openTab = '';        $scope.openTab = 'project';        $scope.tabs = {            project:{},            architect:{},            company:{},            project_manager:{},            buildings: [],            project_notes:[],            project_criticism:[],            consultants: [],            foreman: [],        }        //$scope.tabs.project.project_serial = 0;        //if(!$scope.current_project_serial.value) {        //    $scope.tabs.project.name = $scope.current_project;        //}    })    $scope.loading = false;    $scope.entityErrText = '';    $scope.loadProject = function() {        if(!$scope.current_project.value) {            $scope.current_project = '';            $scope.tabs.project = '';            $scope.openTab = '';            return;        }        $scope.current_project_serial = '';        if($scope.loading) {            return;        }        $scope.openTab = 'project';        $scope.loading = true;        $http.post(ADMIN_PATH + ctrl_name + "/ajax_load_project",{project_id:$scope.current_project.value})            .success(function(response){                if(response.err == 0) {                    //console.log(response);                    $scope.entity = response.project;                    $scope.tabs.project = response.project;                    $scope.tabs.project.project_status_id = parseInt($scope.tabs.project.project_status_id);                    $scope.tabs.project.water_specs = parseInt($scope.tabs.project.water_specs);                    $scope.tabs.project.water_shield = parseInt($scope.tabs.project.water_shield);                    $scope.tabs.project.committee_approve = parseInt($scope.tabs.project.committee_approve);                    $scope.tabs.project.company_id = parseInt($scope.tabs.project.company_id);                    $scope.tabs.project.architect_id = parseInt($scope.tabs.project.architect_id);                    $scope.tabs.project.print_shop_link_id = parseInt($scope.tabs.project.print_shop_link_id);                    $scope.tabs.project.project_manager_id = parseInt($scope.tabs.project.project_manager_id);                    $scope.tabs.project.working_user_id = parseInt($scope.tabs.project.working_user_id);                    $scope.tabs.project.project_criticism_num = parseInt($scope.tabs.project.project_criticism_num);                    $scope.tabs.project.status_description_id = parseInt($scope.tabs.project.status_description_id);                    //$scope.tabs.project.company_id = parseInt($scope.tabs.project.company_id);                    //    var a = {                    //    'name': $scope.entity.name,                    //    'address': $scope.entity.address,                    //    'project_status_id': $scope.entity.project_status_id,                    //    'payment_status': $scope.entity.payment_status,                    //    'notes': $scope.entity.notes,                    //    'water_specs': $scope.entity.water_specs,                    //    'water_specs_text': $scope.entity.water_specs_text,                    //    'committee_approve': $scope.entity.committee_approve,                    //    'committee_approve_text': $scope.entity.committee_approve_text,                    //    'modified': $scope.entity.modified,                    //    'created': $scope.entity.created                    //}                    $scope.tabs.architect = response.architect;                    $scope.tabs.company = response.company;                    $scope.tabs.project_notes = response.project_notes;                    $scope.tabs.project_criticism = response.project_criticism;                    //$scope.tabs.company.project_manager_id = parseInt($scope.tabs.company.project_manager_id);                    $scope.tabs.project_manager = response.project_manager;                    $scope.tabs.buildings = response.buildings;                    $scope.tabs.consultants = response.consultants;                    $scope.tabs.foreman = response.foreman;                    $scope.tabs.project_performas = response.project_performas;                    $scope.account_managers = response.account_managers;                } else {                    $rootScope.entityErrText = response.errdesc;                }                $scope.loading = false;            })            .error(function(){                $rootScope.entityErrText = 'קרתה תקלה';                $scope.loading = false;            })    }    $scope.loadProjectBySerial = function() {        console.log($scope.current_project_serial);        if(!$scope.current_project_serial.value) {            $scope.current_project = '';            $scope.tabs.project = '';            $scope.openTab = '';            return;        }        $scope.current_project = '';        if($scope.loading) {            return;        }        $scope.openTab = 'project';        $scope.loading = true;        $http.post(ADMIN_PATH + ctrl_name + "/ajax_load_project_by_serial",{project_serial:$scope.current_project_serial.text})            .success(function(response){                if(response.err == 0) {                    //console.log(response);                    $scope.entity = response.project;                    $scope.tabs.project = response.project;                    $scope.tabs.project.project_status_id = parseInt($scope.tabs.project.project_status_id);                    $scope.tabs.project.water_specs = parseInt($scope.tabs.project.water_specs);                    $scope.tabs.project.water_shield = parseInt($scope.tabs.project.water_shield);                    $scope.tabs.project.committee_approve = parseInt($scope.tabs.project.committee_approve);                    $scope.tabs.project.company_id = parseInt($scope.tabs.project.company_id);                    $scope.tabs.project.architect_id = parseInt($scope.tabs.project.architect_id);                    $scope.tabs.project.print_shop_link_id = parseInt($scope.tabs.project.print_shop_link_id);                    $scope.tabs.project.project_manager_id = parseInt($scope.tabs.project.project_manager_id);                    $scope.tabs.project.working_user_id = parseInt($scope.tabs.project.working_user_id);                    $scope.tabs.project.project_criticism_num = parseInt($scope.tabs.project.project_criticism_num);                    $scope.tabs.project.status_description_id = parseInt($scope.tabs.project.status_description_id);                    $scope.tabs.architect = response.architect;                    $scope.tabs.company = response.company;                    $scope.tabs.project_notes = response.project_notes;                    $scope.tabs.project_criticism = response.project_criticism;                    //$scope.tabs.company.project_manager_id = parseInt($scope.tabs.company.project_manager_id);                    $scope.tabs.project_manager = response.project_manager;                    $scope.tabs.buildings = response.buildings;                    $scope.tabs.consultants = response.consultants;                    $scope.tabs.foreman = response.foreman;                    $scope.tabs.project_performas = response.project_performas;                    $scope.account_managers = response.account_managers;                } else {                    $rootScope.entityErrText = response.errdesc;                }                $scope.loading = false;            })            .error(function(){                $rootScope.entityErrText = 'קרתה תקלה';                $scope.loading = false;            })    }    $scope.findAccountManager = function(id) {        if(id > 0) {            var ids = $scope.account_managers.map(function (o) {                return parseInt(o.id)            })            var index = ids.indexOf(id);            return $scope.account_managers[index];        }    }    $scope.busy = false;    $scope.loadArchitect = function() {        if($scope.busy) {            return;        }        if(!$scope.tabs.project.architect_id) {            $scope.tabs.architect = {};            $scope.busy = false;            return;        }        if($scope.loading) {            return;        }        $scope.loading = true;        $scope.busy = true;        $http.post(ADMIN_PATH + ctrl_name + "/ajax_load_architect",{architect_id:$scope.tabs.project.architect_id})            .success(function(response){                if(response.err == 0) {                    $scope.tabs.architect = response.architect;                } else {                    $rootScope.entityErrText = response.errdesc;                }                $scope.busy = false;                $scope.loading = false;            })            .error(function(){                $rootScope.entityErrText = 'קרתה תקלה';                $scope.busy = false;                $scope.loading = false;            })    }    $scope.loadCompany = function() {        if($scope.busy) {            return;        }        if(!$scope.tabs.project.company_id) {            $scope.tabs.company = {};            $scope.busy = false;            return;        }        if($scope.loading) {            return;        }        $scope.loading = true;        $scope.busy = true;        $http.post(ADMIN_PATH + ctrl_name + "/ajax_load_company",{company_id:$scope.tabs.project.company_id})            .success(function(response){                if(response.err == 0) {                    $scope.tabs.company = response.company;                } else {                    $rootScope.entityErrText = response.errdesc;                }                $scope.busy = false;                $scope.loading = false;            })            .error(function(){                $rootScope.entityErrText = 'קרתה תקלה';                $scope.loading = false;            })    }    $scope.loadManager = function() {        if($scope.busy) {            return;        }        if(!$scope.tabs.project.project_manager_id) {            $scope.tabs.project_manager = {};            $scope.busy = false;            return;        }        if($scope.loading) {            return;        }        $scope.loading = true;        $scope.busy = true;        $http.post(ADMIN_PATH + ctrl_name + "/ajax_load_project_manager",{project_manager_id:$scope.tabs.project.project_manager_id})            .success(function(response){                if(response.err == 0) {                    $scope.tabs.project_manager = response.project_manager;                } else {                    $rootScope.entityErrText = response.errdesc;                }                $scope.busy = false;                $scope.loading = false;            })            .error(function(){                $rootScope.entityErrText = 'קרתה תקלה';                $scope.loading = false;            })    }    $scope.loadProjectBuildings = function() {        if($scope.busy) {            return;        }        if(!$scope.tabs.project.id) {            $scope.tabs.buildings = [];            $scope.busy = false;            return;        }        if($scope.loading) {            return;        }        $scope.loading = true;        $scope.busy = true;        $http.post(ADMIN_PATH + ctrl_name + "/ajax_load_project_buildings",{project_id:$scope.tabs.project.id})            .success(function(response){                if(response.err == 0) {                    $scope.tabs.buildings = response.buildings;                } else {                    $rootScope.entityErrText = response.errdesc;                }                $scope.busy = false;                $scope.loading = false;            })            .error(function(){                $rootScope.entityErrText = 'קרתה תקלה';            })    }    $scope.loadProjectPaymentLevelPerformas = function(id) {        if($scope.busy) {            return;        }        if(!$scope.tabs.project.id) {            $scope.tabs.payment_levels = [];            $scope.busy = false;            return;        }        if($scope.loading) {            return;        }        //$scope.loading = true;        $scope.busy = true;        $http.post(ADMIN_PATH + ctrl_name + "/ajax_load_payment_level_performas",{id:id})            .success(function(response){                if(response.err == 0) {                    //console.log(response.performas)                    //response.performas.reverse();                    $scope.tabs.performas = response.performas;                } else {                    $rootScope.entityErrText = response.errdesc;                    $scope.tabs.performas = [];                }                $scope.busy = false;                $scope.loading = false;            })            .error(function(){                $rootScope.entityErrText = 'קרתה תקלה';            })    }    $scope.loadProjectPaymentLevels = function() {        if($scope.busy) {            return;        }        if(!$scope.tabs.project.id) {            $scope.tabs.performas = [];            $scope.busy = false;            return;        }        if($scope.loading) {            return;        }        $scope.loading = true;        $scope.busy = true;        $http.post(ADMIN_PATH + ctrl_name + "/ajax_load_project_payment_levels",{project_id:$scope.tabs.project.id})            .success(function(response){                if(response.err == 0) {                    //console.log(response.performas)                    //response.performas.reverse();                    $scope.tabs.payment_levels = response.payment_levels;                } else {                    $rootScope.entityErrText = response.errdesc;                    $scope.tabs.payment_levels = [];                }                $scope.busy = false;                $scope.loading = false;                if($scope.tabs.payment_levels.length) {                    $scope.loadProjectPaymentLevelPerformas($scope.tabs.payment_levels[0].id);                }            })            .error(function(){                $rootScope.entityErrText = 'קרתה תקלה';            })    }    $scope.loadTab = function(tab) {        return;        if(!$scope.current_project) {            return;        }        //if($scope.tabs[tab]) {        //    return;        //}        $scope.loading = true;        $http.post(ADMIN_PATH + ctrl_name + "/ajax_load_tab",{project_id:$scope.current_project.value,tab:tab})            .success(function(response){                if(response.err == 0) {                    console.log(response[tab])                    $scope.tabs[tab] = response[tab];                } else {                    $rootScope.entityErrText = response.errdesc;                }                $scope.loading = false;            })            .error(function(){                $rootScope.entityErrText = 'קרתה תקלה';                $scope.loading = false;            })    }    $scope.saveProject = function(){        if ($scope.busy){            return;        }        //var project = angular.copy($scope.tabs.project);        //var architect = angular.copy($scope.tabs.architect);        //var company = angular.copy($scope.tabs.company);        //var project_manager = angular.copy($scope.tabs.project_manager);        //var buildings = angular.copy($scope.tabs.buildings);        //var formData = {        //    project:project,        //    architect:architect,        //    company:company,        //    project_manager:project_manager,        //    buildings:buildings,        //}        $scope.tabs.project_notes = angular.copy($scope.tabs.project_notes);        $scope.tabs.project_criticism = angular.copy($scope.tabs.project_criticism);        $scope.tabs.consultants = angular.copy($scope.tabs.consultants);        $scope.tabs.foreman = angular.copy($scope.tabs.foreman);        $scope.tabs.project_performas = angular.copy($scope.tabs.project_performas);        var formData = $scope.tabs;        $scope.busy = true;        $scope.entityErrText = '';        $scope.success = false;        $http.post(ADMIN_PATH + "/" + ctrl_name + '/ajax_save',formData)            .success(function(response){                if (response.err==0){                    //refresh();                    $rootScope.entityErrText = 'נשמר בהצלחה';                    $scope.tabs.project.id = response.project.id;                    $scope.tabs.architect.id = response.architect_id;                    $scope.tabs.project.architect_id = response.architect_id;                    $scope.tabs.company.id = response.company_id;                    $scope.tabs.project.company_id = response.company_id;                    $scope.tabs.project_manager.id = response.project_manager_id;                    $scope.tabs.project.project_manager_id = response.project_manager_id;                    $scope.tabs.project.id = response.project.id;                    $scope.tabs.project.project_serial = response.project.project_serial;                    $scope.tabs.project_notes = response.project_notes;                    $scope.tabs.project_criticism = response.project_criticism;                    $scope.tabs.consultants = response.consultants;                    $scope.tabs.foreman = response.foreman;                    $scope.tabs.buildings = response.buildings;                    $scope.tabs.project_performas = response.project_performas;                } else {                    $rootScope.entityErrText = response.errdesc;                }                $scope.busy = false;                //$scope.loadProjectBuildings();                //$scope.loadProjectPaymentLevelPerformas();            })            .error(function(){                $scope.busy = false;                $rootScope.entityErrText = "קרתה תקלה";            });    }    $scope.setCurrentBuilding = function(num) {        $scope.currentBuilding = num;    }    $scope.setCurrentPerforma = function(num) {        $scope.currentPerforma = num;    }    $scope.setCurrentPaymentLevel = function(num) {        $scope.currentPaymentLevel = num;    }    $scope.openPreforma = function(id) {        var winWidth = window.outerWidth;        var winHeight = window.outerHeight - 70;        var winTop = (screen.height / 2) - (winHeight / 2);        var winTop = 0;        var winLeft = (screen.width / 2) - (winWidth / 2);        var winLeft = 0;        var windowref = window.open(ADMIN_PATH+'project_payment_levels/add_new/'+id + '?close_on_save=true', 'פרפורמה', 'top=' + winTop + ',left=' + winLeft + ',toolbar=0,status=0,width=' + winWidth + ',height=' + winHeight);        windowref.onload = function() {            windowref.onunload =  function () {                $scope.loadProjectPaymentLevelPerformas(id);                $scope.$apply();            };        }    }    $scope.viewPreforma = function(id, level_id) {        var winWidth = window.outerWidth;        var winHeight = window.outerHeight - 70;        var winTop = (screen.height / 2) - (winHeight / 2);        var winTop = 0;        var winLeft = (screen.width / 2) - (winWidth / 2);        var winLeft = 0;        var windowref = window.open(ADMIN_PATH+'performas/view/'+id + '?close_on_save=true', 'פרפורמה', 'top=' + winTop + ',left=' + winLeft + ',toolbar=0,status=0,width=' + winWidth + ',height=' + winHeight);        windowref.onload = function() {            windowref.onunload =  function () {                $scope.loadProjectPaymentLevelPerformas(level_id);                $scope.$apply();            };        }    }    $scope.openAddWindow = function(link, model) {        var winWidth = window.outerWidth;        var winHeight = window.outerHeight - 70;        var winTop = (screen.height / 2) - (winHeight / 2);        var winTop = 0;        var winLeft = (screen.width / 2) - (winWidth / 2);        var winLeft = 0;        var windowref = window.open(ADMIN_PATH+link + '?close_on_save=true', 'הוספה', 'top=' + winTop + ',left=' + winLeft + ',toolbar=0,status=0,width=' + winWidth + ',height=' + winHeight);        windowref.onload = function() {            windowref.onunload =  function () {                $scope.loadAddedOptions(model);                $scope.$apply();            };        }    }    $scope.loadAddedOptions = function(model){        var formData = {            model:model        };        $http.post(ADMIN_PATH + "/" + ctrl_name + '/ajax_refresh_options',formData)            .success(function(response){                console.log(response);                console.log(model);                $scope[model+"_options"] = response.options;            })            .error(function(){            })        // console.log(model);    }    //$scope.businessAddedCount = 0;    $scope.addBuilding = function(){        var building_num = $scope.tabs.buildings.length ? parseInt($scope.tabs.buildings[$scope.tabs.buildings.length-1].building_num) + 1 : 1;        $scope.tabs.buildings.push({            architect_id:  $scope.tabs.project.architect_id,            building_block: "",            building_ground: "",            building_lot: "",            building_name: "בניין חדש " + building_num,            building_address: "",            building_num: building_num,            committee_approve: 0,            building_status_id: 0,            building_type_id: 0,            fire_num: 0,            committee_approve_num: 0,            muni_num: 0,            added : true        });        //$scope.businessAddedCount++;        //$scope.tabs.buildings.building_name = "בניין חדש " + $scope.tabs.buildings.length-1;        $scope.currentBuilding = $scope.tabs.buildings.length-1;    }    $scope.addPerforma = function(id){        console.log(id);        //$scope.tabs.performas.push({        //    approved: "",        //    approved_percent: "",        //    approved_price: "",        //    approved_text: "",        //    created: "",        //    delivered: "",        //    extra_percent: "",        //    extra_price: "",        //    extra_text: "",        //    finish_consult_percent: "",        //    finish_consult_price: "",        //    finish_consult_text: "",        //    invoice: "",        //    modified: "",        //    payed_no_fee: "",        //    payed_with_fee: "",        //    payment_days: "",        //    pre_consult_percent: "",        //    pre_consult_price: "",        //    pre_consult_text: "",        //    pre_payment_percent: "",        //    pre_payment_price: "",        //    pre_payment_text: "",        //    project_id: ""        //});        //$scope.currentPerforma = $scope.tabs.performas.length-1;        $scope.openPreforma(id);    }    $scope.payment_level = {        id:0,        project_id:0,        price:'',        total_buildings:'',        lot:'',        notes:''    };    $scope.savePaymentLevel = function(){        $scope.payment_level.project_id = $scope.tabs.project.id;        $http.post(ADMIN_PATH + ctrl_name + '/ajax_save_payment_level',angular.copy($scope.payment_level))            .success(function(response){                if(response.err == 0) {                    $scope.payment_level.id = response.id;                    if(!response.edit) {                        $scope.addPaymentLevel();                    }                    $('#open-payment-level').modal('hide');                    $scope.payment_level = {};                }            })            .error(function(){            })    };    $scope.addPaymentLevel = function(){        $scope.tabs.payment_levels.push($scope.payment_level);        $scope.currentPaymentLevel = $scope.tabs.payment_levels.length-1;        $scope.loadProjectPaymentLevelPerformas($scope.payment_level.id);    };    $scope.editPaymentLevel = function(index){        $scope.payment_level = $scope.tabs.payment_levels[index];        $('#open-payment-level').modal('show');    };    $scope.editPerforma = function(level_id,id){        var winWidth = window.outerWidth;        var winHeight = window.outerHeight - 70;        var winTop = (screen.height / 2) - (winHeight / 2);        var winTop = 0;        var winLeft = (screen.width / 2) - (winWidth / 2);        var winLeft = 0;        var windowref = window.open(ADMIN_PATH+'project_payment_levels/add_new/'+level_id + '/' + id + '?close_on_save=true', 'פרפורמה', 'top=' + winTop + ',left=' + winLeft + ',toolbar=0,status=0,width=' + winWidth + ',height=' + winHeight);        windowref.onload = function() {            windowref.onunload =  function () {                //$scope.loadProjectPaymentLevelPerformas(id);                //$scope.$apply();            };        }    };    $scope.removeBuilding = function(index) {        $scope.tabs.buildings.splice(index,1);        if($scope.currentBuilding == index) {            $scope.currentBuilding = $scope.tabs.buildings.length - 1;        }    }    $scope.removePaymentLevel = function(index) {        $scope.tabs.payment_levels.splice(index,1);        if($scope.currentPaymentLevel == index) {            $scope.currentPaymentLevel = $scope.tabs.payment_levels.length - 1;        }    }    $scope.clearError = function(){        $rootScope.entityErrText = '';    }    $scope.printShopLinkText = function(id) {        var obj = $.grep($scope.print_shop_link_options, function(e){ return e.value == id; });        if(obj.length) {            return obj[0].text;        }        return false;    }    $scope.addProjectNote = function(){        $scope.tabs.project_notes.push({            id:0,            project_id:  $scope.tabs.project.id,            note:'',            added : true        });    }    $scope.removeProjectNote = function(index) {        console.log(index);        $scope.tabs.project_notes.splice(index,1);    }    $scope.addProjectCriticism = function(){        $scope.tabs.project_criticism.push({            id:0,            project_id:  $scope.tabs.project.id,            note:'',            added : true        });    }    $scope.removeProjectCriticism = function(index) {        console.log(index);        $scope.tabs.project_criticism.splice(index,1);    }    $scope.addProjectConsultant = function(index){        if(!$scope.tabs.consultants[index]) {            $scope.tabs.consultants.push({                id: 0,                project_id: $scope.tabs.project.id,                consultant_id: 0,                added: true            });        }    }    $scope.addProjectForeman = function(index){        if(!$scope.tabs.foreman[index]) {            $scope.tabs.foreman.push({                id: 0,                project_id: $scope.tabs.project.id,                foreman_id: 0,                added: true            });        }    }    $scope.removeProjectConsultant = function(index) {        var consultant = $scope.tabs.consultants[index];        if(consultant.consultant_to_project_id) {            $http.post(ADMIN_PATH + ctrl_name + '/ajax_delete_project_consultant',{id:consultant.consultant_to_project_id})                .success(function(response){                    if(response.err == 0) {                        $scope.tabs.consultants[index] = {                            id: 0,                            project_id: $scope.tabs.project.id,                            consultant_id: 0,                            added: true                        };                    }                })                .error(function(){                })        }    }    $scope.removeProjectForeman = function(index, event) {        event.preventDefault();        var foreman = $scope.tabs.foreman[index];        if(foreman.foreman_to_project_id) {            $http.post(ADMIN_PATH + ctrl_name + '/ajax_delete_project_foreman',{id:foreman.foreman_to_project_id})                .success(function(response){                    if(response.err == 0) {                        $scope.tabs.foreman.splice(index, 1)                    }                })                .error(function(){                })        } else {            $scope.tabs.foreman.splice(index,1);        }    }    $scope.addProjectPerforma = function(){        $scope.tabs.project_performas.push({            id:0,            project_id:  $scope.tabs.project.id,            need_to_send:  '1',            is_delivered:  '0',            added : true        });    }    $scope.removeProjectPerforma = function(index) {        var project_performas = $scope.tabs.project_performas[index];        if(project_performas.id) {            $http.post(ADMIN_PATH + ctrl_name + '/ajax_delete_project_performa',{id:project_performas.id})                .success(function(response){                    if(response.err == 0) {                    }                })                .error(function(){                })        }        $scope.tabs.project_performas.splice(index,1);    }    $scope.reminder = function(){        var now = new Date();        var time = now.getTime();        var cookie = getCookie('reminder');        if(cookie) {            cookie = parseInt(cookie);        }        console.log(time);        console.log(cookie);        if(cookie + (1000*60*60*24*14) < time) { // two weeks            setCookie('reminder',time);            $('#reminder').modal('show');        }    }    $scope.reminder();}]);/** * Created by private on 17/08/14. */