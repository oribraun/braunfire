<?phpnamespace Entities;abstract class Entity {	public $id = 0;	public $created = '';	public $modified = '';	public function __construct($child, $o=null)	{		$this->created = date('Y-m-d H:i:s');		if ($o != null){			$attributes = array_keys(get_object_vars($o));			foreach ($attributes as $a){				$child->{$a} = $o->{$a};			}		}	}	public function getId()	{		return intval($this->id);	}	public function setId($id)	{		$this->id = $id;	}	public function setCreated($created)	{		$this->created = $created;	}	public function setModified($modified)	{		$this->modified = $modified;	}	/**	 * @param bool $format	 * @return string|\DateTime	 */	public function getCreated($format = 'Y-m-d H:i:s')	{		return $this->process_timestamp('created', $format, 'Y-m-d H:i:s');	}	public function getModified($format = 'Y-m-d H:i:s')	{		return $this->process_timestamp('modified', $format, 'Y-m-d H:i:s');	}	protected function process_field($field_name, $default = array())	{		if ($this->{$field_name} == ''){			$this->{$field_name} = $default;		} elseif (is_string($this->{$field_name})) {			$v = @unserialize($this->{$field_name});			if (!$v){				$this->{$field_name} = $default;			} else {				$this->{$field_name} = $v;			}		}	}	protected function process_json_field($field_name, $default = array())	{		if ($this->{$field_name} == ''){			$this->{$field_name} = $default;		} elseif (is_string($this->{$field_name})) {			$v = @json_decode($this->{$field_name});			if (!$v){				$this->{$field_name} = $default;			} else {				$this->{$field_name} = $v;			}		}	}	public function process_timestamp($field_name, $format, $db_format)	{		if ($this->{$field_name} == null || $this->{$field_name} == 0 || $this->{$field_name} == '0000-00-00' || $this->{$field_name} == '0000-00-00 00:00:00'){			return false;		}		if ($format == $db_format){			return $this->{$field_name};		}		$o = \DateTime::createFromFormat($db_format, $this->{$field_name});		if ($format == 'object'){			return $o;		}		return $o->format($format);	}	public function toJSObj()	{		return $this;	}    public function set($key, $val)    {        $this->{$key} = $val;    }    public function setAll($entity, $attributes=null)    {        foreach ($attributes as $key => $val){            $entity->{$key} = $val;        }    }}require(APPPATH.'models/entities/user.php');require(APPPATH.'models/entities/building_type.php');require(APPPATH.'models/entities/building_status.php');require(APPPATH.'models/entities/manager_type.php');require(APPPATH.'models/entities/project_status.php');require(APPPATH.'models/entities/status_description.php');require(APPPATH.'models/entities/building.php');require(APPPATH.'models/entities/architect.php');require(APPPATH.'models/entities/manager.php');require(APPPATH.'models/entities/company.php');require(APPPATH.'models/entities/project.php');require(APPPATH.'models/entities/print_shop_link.php');require(APPPATH.'models/entities/performa.php');require(APPPATH.'models/entities/project_payment_level.php');require(APPPATH.'models/entities/consultant.php');require(APPPATH.'models/entities/project_performa.php');require(APPPATH.'models/entities/consultant_type.php');